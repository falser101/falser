import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,f as t}from"./app-LEHJ93_Z.js";const p="/falser/imgs/pulsar/broker-startup/总体启动流程.png",e={},o=t('<h1 id="broker组件启动流程" tabindex="-1"><a class="header-anchor" href="#broker组件启动流程" aria-hidden="true">#</a> Broker组件启动流程</h1><p>在收发消息前，我们得启动Broker服务，本章将介绍Broker在启动阶段都做了什么。各个模块之前的关系，服务启动不同模块的初始化顺序。</p><h2 id="服务启动" tabindex="-1"><a class="header-anchor" href="#服务启动" aria-hidden="true">#</a> 服务启动</h2><p>使用bin目录下名为pulsar的CLI工具，执行命令时传入broker参数，会调用<code>PulsarBrokerStarter</code>这个类来启动Pulsar Broker服务。Broker总体启动流程如下图所示:</p><figure><img src="'+p+`" alt="pulsar-broker-startup" tabindex="0" loading="lazy"><figcaption>pulsar-broker-startup</figcaption></figure><ol><li><p>加载配置文件。Broker启动时会读取conf/broker.conf文件，并将其中的配置信息全部转化为Key/Value的形式，通过反射创建一个<code>ServiceConfigration</code>对象。并且把值设置到这个对象的属性中。</p></li><li><p>注册ShutdownHook和OOM监听器。ShutdownHook在服务关闭时执行清理💰，OOMListener在内存溢出时打印异常信息。</p></li><li><p>启动<code>BookieStatsProvider</code>服务,<code>BookieStatsProvider</code>是Bookie服务的统计信息提供者，提供Bookie服务的统计信息。这一步通常只在Standalone模式下执行。</p></li><li><p>启动BookieServer,让Bookie和Broker一起启动，主要用于开发测试</p></li><li><p>启动<code>PulsarService</code>服务，<code>PulsarService</code>是启动Broker的主入口，内部还会启动一个<code>BrokerService</code>，这两个Service的分工不同，<code>PulsarService</code>范围更大，包括负载管理、缓存、Schema、Admin相关的Web服务等，属于管理流。而<code>BrokerService</code>则专注于消息的收发，创建<code>Netty EventLoopGroup</code>、创建内置调度器等，属于数据流。</p></li></ol><blockquote><p>什么是管理流和数据流？</p><p>增删改查Broker的配置，或者一个Topic，通过Pulsar-Admin来操作，这些操作都是管理流。 收发消息，这些操作都是数据流。执行操作之前，需要通过PulsarClient来创建Producer和Consumer，然后才能执行收发消息的操作。</p></blockquote><p>主要代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token class-name">BrokerStarter</span> starter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrokerStarter</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">PulsarByteBufAllocator</span><span class="token punctuation">.</span><span class="token function">registerOOMListener</span><span class="token punctuation">(</span>oomException <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        starter<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

# 加载配置文件
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ServiceConfiguration</span> <span class="token function">loadConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span> configFile<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>configFile<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ServiceConfiguration</span> config <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">,</span> <span class="token class-name">ServiceConfiguration</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// it validates provided configuration is completed</span>
        <span class="token function">isComplete</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> config<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

# 启动服务
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bookieStatsProvider <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bookieStatsProvider<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>bookieConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;started bookieStatsProvider.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bookieServer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bookieStartFuture <span class="token operator">=</span> <span class="token class-name">ComponentStarter</span><span class="token punctuation">.</span><span class="token function">startComponent</span><span class="token punctuation">(</span>bookieServer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;started bookieServer.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>autoRecoveryMain <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        autoRecoveryMain<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;started bookie autoRecoveryMain.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    pulsarService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;PulsarService started.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pulsarservice" tabindex="-1"><a class="header-anchor" href="#pulsarservice" aria-hidden="true">#</a> PulsarService</h2><p>主要代码如下（省略了一些不重要的代码）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">PulsarServerException</span> <span class="token punctuation">{</span>
    mutex<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        localMetadataSynchronizer <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getMetadataSyncEventTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">PulsarMetadataEventSynchronizer</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getMetadataSyncEventTopic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        localMetadataStore <span class="token operator">=</span> <span class="token function">createLocalMetadataStore</span><span class="token punctuation">(</span>localMetadataSynchronizer<span class="token punctuation">)</span><span class="token punctuation">;</span>
        localMetadataStore<span class="token punctuation">.</span><span class="token function">registerSessionListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">::</span><span class="token function">handleMetadataSessionEvent</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建coordinationService，用于分布式锁、Broker选主等</span>
        coordinationService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CoordinationServiceImpl</span><span class="token punctuation">(</span>localMetadataStore<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建pulsarResources，用于元数据管理，元数据包括本地元数据和配置文件元数据，保存在zookeeper中</span>
        pulsarResources <span class="token operator">=</span> <span class="token function">newPulsarResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建orderedExecutor线程池，后续用于ZK的操作，拆分bundle等</span>
        orderedExecutor <span class="token operator">=</span> <span class="token function">newOrderedExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建protocolHandlers，这个服务用于管理pulsar的扩展点，pulsar中可以通过*.nar文件实现自定义扩展点。</span>
        <span class="token comment">// Pulsar启动时会默认尝试扫描./protocols目录或系统环境变量java.io.tmpdir里设置的路径下的所有nar文件。</span>
        <span class="token comment">// 如KOP、AOP等都是通过这个扩展点实现的</span>
        protocolHandlers <span class="token operator">=</span> <span class="token class-name">ProtocolHandlers</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        protocolHandlers<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Now we are ready to start services</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>bkClientFactory <span class="token operator">=</span> <span class="token function">newBookKeeperClientFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建ManagedLedgerClientFactory，用于管理ManagedLedger的客户端。</span>
        <span class="token comment">// Pulsar是计算和存储分离的架构，managedLedger是存储的抽象，ManagedLedgerClient用来请求BookKeeper保存数据</span>
        managedLedgerClientFactory <span class="token operator">=</span> <span class="token function">newManagedLedgerClientFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建BrokerService, 数据流相关的服务都在这里启动</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brokerService <span class="token operator">=</span> <span class="token function">newBrokerService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建loadManager，用于管理broker的负载，不管有没有打开自动负载管理都会创建</span>
        <span class="token comment">// 默认管理器是org.apache.pulsar.broker.loadbalance.impl.ModularLoadManagerImpl</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>loadManager<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">LoadManager</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// needs load management service and before start broker service,</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startNamespaceService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        schemaStorage <span class="token operator">=</span> <span class="token function">createAndStartSchemaStorage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 用于管理Topic的Schema，如Schema.Type.JSON</span>
        schemaRegistryService <span class="token operator">=</span> <span class="token class-name">SchemaRegistryService</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
                schemaStorage<span class="token punctuation">,</span> config<span class="token punctuation">.</span><span class="token function">getSchemaRegistryCompatibilityCheckers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>executor<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">OffloadPoliciesImpl</span> defaultOffloadPolicies <span class="token operator">=</span>
                <span class="token class-name">OffloadPoliciesImpl</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">OrderedScheduler</span> offloaderScheduler <span class="token operator">=</span> <span class="token function">getOffloaderScheduler</span><span class="token punctuation">(</span>defaultOffloadPolicies<span class="token punctuation">)</span><span class="token punctuation">;</span>

        offloaderStats <span class="token operator">=</span> <span class="token class-name">LedgerOffloaderStats</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isExposeManagedLedgerMetricsInPrometheus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                exposeTopicMetrics<span class="token punctuation">,</span> offloaderScheduler<span class="token punctuation">,</span> interval<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建OffloaderManager，当有大量的消息堆积，这些消息要求保留很长时间，我们不想让这些冷数据占用线上服务的硬盘空间。</span>
        <span class="token comment">// 这些冷数据可以使用OffloaderManager移动到其他磁盘上，以节省空间。</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>defaultOffloader <span class="token operator">=</span> <span class="token function">createManagedLedgerOffloader</span><span class="token punctuation">(</span>defaultOffloadPolicies<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">setBrokerInterceptor</span><span class="token punctuation">(</span><span class="token function">newBrokerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// use getter to support mocking getBrokerInterceptor method in tests</span>
        <span class="token class-name">BrokerInterceptor</span> interceptor <span class="token operator">=</span> <span class="token function">getBrokerInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>interceptor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            brokerService<span class="token punctuation">.</span><span class="token function">setInterceptor</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            interceptor<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 启动brokerService</span>
        brokerService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Load additional servlets</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brokerAdditionalServlets <span class="token operator">=</span> <span class="token class-name">AdditionalServlets</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建管理流WebService，并启动</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>webService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">createMetricsServlet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addWebServerHandlers</span><span class="token punctuation">(</span>webService<span class="token punctuation">,</span> metricsServlet<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>webService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

        <span class="token comment">// 启动Leader选举服务</span>
        <span class="token function">startLeaderElectionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 启动LoadManagementService</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startLoadManagementService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Initialize namespace service, after service url assigned. Should init zk and refresh self owner info.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nsService<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 主题策略服务，让用户可以设置主题级别的策略</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isTopicLevelPoliciesEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span><span class="token function">isSystemTopicEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>topicPoliciesService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SystemTopicBasedTopicPoliciesService</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>topicPoliciesService<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Register heartbeat and bootstrap namespaces.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nsService<span class="token punctuation">.</span><span class="token function">registerBootstrapNamespaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 事务相关服务</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isTransactionCoordinatorEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">MLTransactionMetadataStoreProvider</span><span class="token punctuation">.</span><span class="token function">initBufferedWriterMetrics</span><span class="token punctuation">(</span><span class="token function">getAdvertisedAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MLPendingAckStoreProvider</span><span class="token punctuation">.</span><span class="token function">initBufferedWriterMetrics</span><span class="token punctuation">(</span><span class="token function">getAdvertisedAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>transactionBufferSnapshotServiceFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionBufferSnapshotServiceFactory</span><span class="token punctuation">(</span><span class="token function">getClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">this</span><span class="token punctuation">.</span>transactionTimer <span class="token operator">=</span>
                    <span class="token keyword">new</span> <span class="token class-name">HashedWheelTimer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultThreadFactory</span><span class="token punctuation">(</span><span class="token string">&quot;pulsar-transaction-timer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            transactionBufferClient <span class="token operator">=</span> <span class="token class-name">TransactionBufferClientImpl</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> transactionTimer<span class="token punctuation">,</span>
                    config<span class="token punctuation">.</span><span class="token function">getTransactionBufferClientMaxConcurrentRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    config<span class="token punctuation">.</span><span class="token function">getTransactionBufferClientOperationTimeoutInMills</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            transactionMetadataStoreService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMetadataStoreService</span><span class="token punctuation">(</span><span class="token class-name">TransactionMetadataStoreProvider</span>
                    <span class="token punctuation">.</span><span class="token function">newProvider</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getTransactionMetadataStoreProviderClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span>
                    transactionBufferClient<span class="token punctuation">,</span> transactionTimer<span class="token punctuation">)</span><span class="token punctuation">;</span>

            transactionBufferProvider <span class="token operator">=</span> <span class="token class-name">TransactionBufferProvider</span>
                    <span class="token punctuation">.</span><span class="token function">newProvider</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getTransactionBufferProviderClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            transactionPendingAckStoreProvider <span class="token operator">=</span> <span class="token class-name">TransactionPendingAckStoreProvider</span>
                    <span class="token punctuation">.</span><span class="token function">newProvider</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">getTransactionPendingAckStoreProviderClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 初始化metricsGenerator，用于将生成Broker级别的metrics暴露给Prometheus</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>metricsGenerator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MetricsGenerator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Initialize the message protocol handlers.</span>
        <span class="token comment">// start the protocol handlers only after the broker is ready,</span>
        <span class="token comment">// so that the protocol handlers can access broker service properly.</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>protocolHandlers<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>brokerService<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">InetSocketAddress</span><span class="token punctuation">,</span> <span class="token class-name">ChannelInitializer</span><span class="token punctuation">&lt;</span><span class="token class-name">SocketChannel</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> protocolHandlerChannelInitializers <span class="token operator">=</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>protocolHandlers<span class="token punctuation">.</span><span class="token function">newChannelInitializers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>brokerService<span class="token punctuation">.</span><span class="token function">startProtocolHandlers</span><span class="token punctuation">(</span>protocolHandlerChannelInitializers<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">acquireSLANamespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建并启动function worker服务</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startWorkerService</span><span class="token punctuation">(</span>brokerService<span class="token punctuation">.</span><span class="token function">getAuthenticationService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> brokerService<span class="token punctuation">.</span><span class="token function">getAuthorizationService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 创建并启动packages management服务,用于管理Function的用户上传的代码包</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span><span class="token function">isEnablePackagesManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startPackagesManagementService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="brokerservice" tabindex="-1"><a class="header-anchor" href="#brokerservice" aria-hidden="true">#</a> BrokerService</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BrokerService</span><span class="token punctuation">(</span><span class="token class-name">PulsarService</span> pulsar<span class="token punctuation">,</span> <span class="token class-name">EventLoopGroup</span> eventLoopGroup<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// 创建topicOrderedExecutor，这是一个线程池，由bookkeeper封装，保证同一个Topic名，</span>
    <span class="token comment">// 永远使用同一个线程来执行，从而保证同一个topic的操作是有序的</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>topicOrderedExecutor <span class="token operator">=</span> <span class="token class-name">OrderedExecutor</span><span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">numThreads</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTopicOrderedExecutorThreadNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;broker-topic-workers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用Netty创建acceptorGroup处理I/O事件</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>acceptorGroup <span class="token operator">=</span> <span class="token class-name">EventLoopUtil</span><span class="token punctuation">.</span><span class="token function">newEventLoopGroup</span><span class="token punctuation">(</span>
                pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNumAcceptorThreads</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> acceptorThreadFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 使用Netty创建workerGroup处理业务逻辑</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>workerGroup <span class="token operator">=</span> eventLoopGroup<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token comment">// Pulsar权限校验，支持Produce，Consume、Function三种权限</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>authorizationService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationService</span><span class="token punctuation">(</span>
                pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pulsar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPulsarResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建各种监视器</span>
    <span class="token comment">// 定期检查长期未使用的主题并删除</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>inactivityMonitor <span class="token operator">=</span> <span class="token class-name">OrderedScheduler</span><span class="token punctuation">.</span><span class="token function">newSchedulerBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;pulsar-inactivity-monitor&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">numThreads</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 定期检查过期消息并删除</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>messageExpiryMonitor <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// 定期压缩主题</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>compactionMonitor <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>consumedLedgersMonitor <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>backlogQuotaManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BacklogQuotaManager</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// backlog检查器</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>backlogQuotaChecker <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// 认证服务</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>authenticationService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AuthenticationService</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token comment">// 创建动态配置的监听器</span>
    <span class="token function">updateConfigurationAndRegisterListeners</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 一些信号量</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lookupRequestSemaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Semaphore</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxConcurrentLookupRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>topicLoadRequestSemaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Semaphore</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxConcurrentTopicLoadRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxUnackedMessagesPerBroker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span>
            <span class="token operator">&amp;&amp;</span> pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxUnackedMessagesPerSubscriptionOnBrokerBlocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 最大未确认消息数</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxUnackedMessages <span class="token operator">=</span> pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxUnackedMessagesPerBroker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxUnackedMsgsPerDispatcher <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>maxUnackedMessages
                <span class="token operator">*</span> pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMaxUnackedMessagesPerSubscriptionOnBrokerBlocked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxUnackedMessages <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maxUnackedMsgsPerDispatcher <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Pulsar的延迟消息的实现类会通过这个工厂创建出来</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>delayedDeliveryTrackerFactory <span class="token operator">=</span> <span class="token class-name">DelayedDeliveryTrackerLoader</span>
        <span class="token punctuation">.</span><span class="token function">loadDelayedDeliveryTrackerFactory</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Entry元数据的拦截器，用于用户自定义扩展</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>brokerEntryMetadataInterceptors <span class="token operator">=</span> <span class="token class-name">BrokerEntryMetadataUtils</span>
        <span class="token punctuation">.</span><span class="token function">loadBrokerEntryMetadataInterceptors</span><span class="token punctuation">(</span>pulsar<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBrokerEntryMetadataInterceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">BrokerService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),c=[o];function i(l,u){return s(),a("div",null,c)}const d=n(e,[["render",i],["__file","broker启动流程.html.vue"]]);export{d as default};
