const e=JSON.parse('{"key":"v-a44fa32c","path":"/posts/pulsar/Broker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8B%A6%E6%88%AA%E5%99%A8.html","title":"Pulsar 自定义拦截器","lang":"zh-CN","frontmatter":{"title":"Pulsar 自定义拦截器","author":"falser101","date":"2024-01-16T00:00:00.000Z","headerDepth":3,"category":["pulsar"],"tag":["pulsar"],"description":"概述 Pulsar暴露了BrokerInterceptor接口，允许用户自定义拦截器，拦截器提供了多个切入点，我们可以在这些切入点上完成自定义的逻辑，切入点如表所示: 切入点名 描述 beforeSendMessage 当Broker读取完消息，还未发送给Consumer时触发 onPulsarCommand Pulsar收到任何客户端命令时触发 onConnectionClosed 当有连接关闭时触发 onWebserviceRequest 当有管理流相关的HTTP请求时触发 onWebserviceResponse 当有管理流相关的HTTP响应时触发 onFilter 管理流HTTP的Filter，当作Serverlet Filter使用即可 messageProduced 消息发送成功后触发","head":[["meta",{"property":"og:url","content":"https://falser101.github.io/falser/posts/pulsar/Broker%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8B%A6%E6%88%AA%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"飞哥与小佛"}],["meta",{"property":"og:title","content":"Pulsar 自定义拦截器"}],["meta",{"property":"og:description","content":"概述 Pulsar暴露了BrokerInterceptor接口，允许用户自定义拦截器，拦截器提供了多个切入点，我们可以在这些切入点上完成自定义的逻辑，切入点如表所示: 切入点名 描述 beforeSendMessage 当Broker读取完消息，还未发送给Consumer时触发 onPulsarCommand Pulsar收到任何客户端命令时触发 onConnectionClosed 当有连接关闭时触发 onWebserviceRequest 当有管理流相关的HTTP请求时触发 onWebserviceResponse 当有管理流相关的HTTP响应时触发 onFilter 管理流HTTP的Filter，当作Serverlet Filter使用即可 messageProduced 消息发送成功后触发"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-16T03:20:38.000Z"}],["meta",{"property":"article:author","content":"falser101"}],["meta",{"property":"article:tag","content":"pulsar"}],["meta",{"property":"article:published_time","content":"2024-01-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-16T03:20:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Pulsar 自定义拦截器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-01-16T03:20:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"falser101\\"}]}"]]},"headers":[{"level":1,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":1,"title":"自定义拦截器","slug":"自定义拦截器","link":"#自定义拦截器","children":[{"level":2,"title":"实现接口","slug":"实现接口","link":"#实现接口","children":[]},{"level":2,"title":"编写项目描述文件","slug":"编写项目描述文件","link":"#编写项目描述文件","children":[]},{"level":2,"title":"添加依赖","slug":"添加依赖","link":"#添加依赖","children":[]},{"level":2,"title":"修改配置","slug":"修改配置","link":"#修改配置","children":[]}]},{"level":1,"title":"启动并测试","slug":"启动并测试","link":"#启动并测试","children":[]}],"git":{"createdTime":1705375238000,"updatedTime":1705375238000,"contributors":[{"name":"T2816","email":"zhangjf@tongtech.com","commits":1}]},"readingTime":{"minutes":2.02,"words":605},"filePathRelative":"posts/pulsar/Broker自定义拦截器.md","localizedDate":"2024年1月16日","excerpt":"<h1> 概述</h1>\\n<p>Pulsar暴露了BrokerInterceptor接口，允许用户自定义拦截器，拦截器提供了多个切入点，我们可以在这些切入点上完成自定义的逻辑，切入点如表所示:</p>\\n<table>\\n<thead>\\n<tr>\\n<th>切入点名</th>\\n<th>描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>beforeSendMessage</td>\\n<td>当Broker读取完消息，还未发送给Consumer时触发</td>\\n</tr>\\n<tr>\\n<td>onPulsarCommand</td>\\n<td>Pulsar收到任何客户端命令时触发</td>\\n</tr>\\n<tr>\\n<td>onConnectionClosed</td>\\n<td>当有连接关闭时触发</td>\\n</tr>\\n<tr>\\n<td>onWebserviceRequest</td>\\n<td>当有管理流相关的HTTP请求时触发</td>\\n</tr>\\n<tr>\\n<td>onWebserviceResponse</td>\\n<td>当有管理流相关的HTTP响应时触发</td>\\n</tr>\\n<tr>\\n<td>onFilter</td>\\n<td>管理流HTTP的Filter，当作Serverlet Filter使用即可</td>\\n</tr>\\n<tr>\\n<td>messageProduced</td>\\n<td>消息发送成功后触发</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{e as data};
