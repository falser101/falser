const t=JSON.parse('{"key":"v-115bfe12","path":"/posts/%E5%89%8D%E7%AB%AF/2024/01.oauth2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB.html","title":"在前后端分离的项目中接入oauth2","lang":"zh-CN","frontmatter":{"title":"在前后端分离的项目中接入oauth2","date":"2024-02-22T00:00:00.000Z","author":"falser101","headerDepth":3,"tag":["OAuth2"],"category":["frontend"],"description":"OAuth2 OAuth2的概念不再说明了，可查阅官网OAuth 2.0。 使用Authorization Code Flow模式来实现 1. 创建OAuth2客户端 在OAuth2服务器端创建客户端，并设置好secret和client_id。以及回调地址。 2. 后端重定向接口 java 使用com.nimbusds:oauth2-oidc-sdk来实现OAuth2，重定向接口如下：","head":[["meta",{"property":"og:url","content":"https://falser101.github.io/falser/posts/%E5%89%8D%E7%AB%AF/2024/01.oauth2%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB.html"}],["meta",{"property":"og:site_name","content":"飞哥与小佛"}],["meta",{"property":"og:title","content":"在前后端分离的项目中接入oauth2"}],["meta",{"property":"og:description","content":"OAuth2 OAuth2的概念不再说明了，可查阅官网OAuth 2.0。 使用Authorization Code Flow模式来实现 1. 创建OAuth2客户端 在OAuth2服务器端创建客户端，并设置好secret和client_id。以及回调地址。 2. 后端重定向接口 java 使用com.nimbusds:oauth2-oidc-sdk来实现OAuth2，重定向接口如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-22T07:15:24.000Z"}],["meta",{"property":"article:author","content":"falser101"}],["meta",{"property":"article:tag","content":"OAuth2"}],["meta",{"property":"article:published_time","content":"2024-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-02-22T07:15:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在前后端分离的项目中接入oauth2\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-02-22T07:15:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"falser101\\"}]}"]]},"headers":[{"level":2,"title":"OAuth2","slug":"oauth2","link":"#oauth2","children":[]},{"level":2,"title":"使用Authorization Code Flow模式来实现","slug":"使用authorization-code-flow模式来实现","link":"#使用authorization-code-flow模式来实现","children":[{"level":3,"title":"1. 创建OAuth2客户端","slug":"_1-创建oauth2客户端","link":"#_1-创建oauth2客户端","children":[]},{"level":3,"title":"2. 后端重定向接口","slug":"_2-后端重定向接口","link":"#_2-后端重定向接口","children":[]},{"level":3,"title":"3. 前端跳转","slug":"_3-前端跳转","link":"#_3-前端跳转","children":[]},{"level":3,"title":"4. 前端的callback处理","slug":"_4-前端的callback处理","link":"#_4-前端的callback处理","children":[]},{"level":3,"title":"5. 后端获取token","slug":"_5-后端获取token","link":"#_5-后端获取token","children":[]}]}],"git":{"createdTime":1708586124000,"updatedTime":1708586124000,"contributors":[{"name":"T2816","email":"zhangjf@tongtech.com","commits":1}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"posts/前端/2024/01.oauth2前后端分离.md","localizedDate":"2024年2月22日","excerpt":"<h2> OAuth2</h2>\\n<p>OAuth2的概念不再说明了，可查阅官网<a href=\\"https://oauth.net/2/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OAuth 2.0</a>。</p>\\n<h2> 使用Authorization Code Flow模式来实现</h2>\\n<h3> 1. 创建OAuth2客户端</h3>\\n<p>在OAuth2服务器端创建客户端，并设置好secret和client_id。以及回调地址。</p>\\n<h3> 2. 后端重定向接口</h3>\\n<p>java 使用<code>com.nimbusds:oauth2-oidc-sdk</code>来实现OAuth2，重定向接口如下：</p>","autoDesc":true}');export{t as data};
