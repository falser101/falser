import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as o}from"./app-4e52e7a3.js";const t={},e=o(`<blockquote><p>slog 结构化日志记录</p></blockquote><p>Go 1.21 中的新 log/slog 软件包为标准库带来了结构化日志记录。结构化日志使用键值对，因此可以快速可靠地解析、过滤、搜索和分析它们。对于服务器来说，日志记录是开发人员观察系统详细行为的重要方式，通常是他们调试系统的第一个地方。因此，日志往往数量庞大，快速搜索和过滤它们的能力至关重要</p><h1 id="快速使用" tabindex="-1"><a class="header-anchor" href="#快速使用" aria-hidden="true">#</a> 快速使用</h1><div class="language-golang line-numbers-mode" data-ext="golang"><pre class="language-golang"><code>package main

import &quot;log/slog&quot;

func main() {
    slog.Info(&quot;hello, world&quot;)
}

# 输出内容如下
2023/010/07 16:09:19 INFO hello, world
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除Info之外，还有用于其他三个级别的函数 Debug 、 Warn 和 Error以及一个将级别作为参数的更通用 Log 的函数。在slog中，级别只是整数，因此不限于四个命名级别。例如，Info为0且Warn为4，因此，如果您的日志记录系统具有介于两者之间的级别，则可以使用2。</p><p>与 log 包不同，我们可以轻松地将键值对添加到我们的输出中，方法是将它们写入消息之后：</p><div class="language-golang line-numbers-mode" data-ext="golang"><pre class="language-golang"><code>slog.Info(&quot;hello, world&quot;, &quot;user&quot;, os.Getenv(&quot;USER&quot;))

# 输出
2023/10/07 16:27:19 INFO hello, world user=falser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>slog 顶级函数使用默认logger。我们可以显式获取此logger，并调用其方法</p><div class="language-golang line-numbers-mode" data-ext="golang"><pre class="language-golang"><code>logger := slog.Default()
logger.Info(&quot;hello, world&quot;, &quot;user&quot;, os.Getenv(&quot;USER&quot;))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以通过更改logger使用的处理程序来更改输出。 slog 带有两个内置处理程序。TextHandler以key=value的形式发出所有日志信息。此程序使用创建一个 TextHandler新的logger，并对Info该方法进行相同的调用：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> slog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>slog<span class="token punctuation">.</span><span class="token function">NewTextHandler</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;hello, world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

# 输出
time<span class="token operator">=</span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span>07T16<span class="token punctuation">:</span><span class="token number">56</span><span class="token punctuation">:</span><span class="token number">03.786</span><span class="token operator">-</span><span class="token number">04</span><span class="token punctuation">:</span><span class="token number">00</span> level<span class="token operator">=</span>INFO msg<span class="token operator">=</span><span class="token string">&quot;hello, world&quot;</span> user<span class="token operator">=</span>falser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JsonHandler:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>logger <span class="token operator">:=</span> slog<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>slog<span class="token punctuation">.</span><span class="token function">NewJSONHandler</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdout<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span><span class="token function">Info</span><span class="token punctuation">(</span><span class="token string">&quot;hello, world&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

# 输出
<span class="token punctuation">{</span><span class="token string">&quot;time&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;2023-10-07T16:58:02.939245411-04:00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;level&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;INFO&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;hello, world&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;falser&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以自己实现slog.Handler接口</p><p>对于频繁执行的日志语句，使用该 Attr 类型和调用 LogAttrs 方法可能更有效。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>slog<span class="token punctuation">.</span><span class="token function">LogAttrs</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> slog<span class="token punctuation">.</span>LevelInfo<span class="token punctuation">,</span> <span class="token string">&quot;hello, world&quot;</span><span class="token punctuation">,</span> slog<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span><span class="token function">Getenv</span><span class="token punctuation">(</span><span class="token string">&quot;USER&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>slog.Info(&quot;message&quot;, &quot;k1&quot;, v1, &quot;k2&quot;, v2)
# 这种方式可读性更高不易出错
slog.Info(&quot;message&quot;, slog.Int(&quot;k1&quot;, v1), slog.String(&quot;k2&quot;, v2))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),p=[e];function l(u,c){return s(),a("div",null,p)}const d=n(t,[["render",l],["__file","01.go1.21新增日志库slog详解.html.vue"]]);export{d as default};
